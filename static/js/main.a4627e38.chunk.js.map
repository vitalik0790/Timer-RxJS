{"version":3,"sources":["observables/stopwatch.observables.js","utils/time.utils.js","App.js","index.js"],"names":["actions$","Subject","wait$","pipe","filter","action","buffer$","debounceTime","shouldWait$","buffer","map","list","length","x","stop$","reset$","start$","stopwatch$","merge","mergeMap","interval","takeUntil","scan","acc","val","formatTime","seconds","displayedSeconds","minutes","Math","floor","value","join","App","useState","time","setTime","useEffect","sub","subscribe","unsubscribe","className","role","onClick","next","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAGaA,EAAW,IAAIC,IAEtBC,EAAQF,EAASG,KAAKC,aAAO,SAACC,GAAD,MAAuB,SAAXA,MACzCC,EAAUJ,EAAMC,KAAKI,YAAa,MAClCC,EAAcN,EAAMC,KACxBM,YAAOH,GACPI,aAAI,SAACC,GAAD,OAAUA,EAAKC,UACnBR,aAAO,SAACS,GAAD,OAAa,IAANA,MAGVC,EAAQd,EAASG,KAAKC,aAAO,SAACC,GAAD,MAAuB,SAAXA,MAEzCU,EAASf,EAASG,KAAKC,aAAO,SAACC,GAAD,MAAuB,UAAXA,MAE1CW,EAAShB,EAASG,KAAKC,aAAO,SAACC,GAAD,MAAuB,UAAXA,MAEnCY,EAAaC,YACxBF,EAAOb,KACLgB,aAAS,kBACPC,YAAS,KAAMjB,KACbkB,YAAUb,GACVa,YAAUP,GACVJ,aAAI,kBAAM,UAIhBK,EAAOZ,KAAKO,aAAI,kBAAM,MACtBI,EAAMX,KAAKO,aAAI,kBAAM,OACrBP,KAAKmB,aAAK,SAACC,EAAKC,GAAN,OAAuB,IAARA,EAAY,EAAID,EAAMC,MC/BpCC,EAAa,SAACC,GACzB,IAAMC,EAAmBD,EAAU,GAC7BE,EAAUC,KAAKC,MAAOJ,EAAU,GAAM,IAG5C,MAAO,CAFOG,KAAKC,MAAMJ,EAAU,MAEpBE,EAASD,GAAkBjB,KAAI,SAACqB,GAAD,OAAYA,EAAQ,EAAIA,EAAZ,WAAwBA,MAAUC,KAAK,Q,eCCtFC,EAAM,WAAO,IAAD,EACCC,mBAAS,GADV,mBAChBC,EADgB,KACVC,EADU,KASvB,OANAC,qBAAU,WACR,IAAMC,EAAMrB,EAAWsB,UAAUH,GAEjC,OAAO,kBAAME,EAAIE,iBAChB,IAGD,qBAAKC,UAAU,SAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBhB,EAAWU,KACnC,sBAAKM,UAAU,WAAf,UACE,qBAAKA,UAAU,MAAMC,KAAK,SAASC,QAAS,kBAAM3C,EAAS4C,KAAK,UAAhE,mBAGA,qBAAKH,UAAU,MAAMC,KAAK,SAASC,QAAS,kBAAM3C,EAAS4C,KAAK,SAAhE,kBAGA,qBAAKH,UAAU,MAAMC,KAAK,SAASC,QAAS,kBAAM3C,EAAS4C,KAAK,SAAhE,kBAGA,qBAAKH,UAAU,MAAMC,KAAK,SAASC,QAAS,kBAAM3C,EAAS4C,KAAK,UAAhE,4BCxBVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a4627e38.chunk.js","sourcesContent":["import { Subject, merge, interval } from 'rxjs';\r\nimport { filter, takeUntil, map, mergeMap, debounceTime, buffer, scan } from 'rxjs/operators';\r\n\r\nexport const actions$ = new Subject();\r\n\r\nconst wait$ = actions$.pipe(filter((action) => action === 'wait'));\r\nconst buffer$ = wait$.pipe(debounceTime(299));\r\nconst shouldWait$ = wait$.pipe(\r\n  buffer(buffer$),\r\n  map((list) => list.length),\r\n  filter((x) => x === 2),\r\n);\r\n\r\nconst stop$ = actions$.pipe(filter((action) => action === 'stop'));\r\n\r\nconst reset$ = actions$.pipe(filter((action) => action === 'reset'));\r\n\r\nconst start$ = actions$.pipe(filter((action) => action === 'start'));\r\n\r\nexport const stopwatch$ = merge(\r\n  start$.pipe(\r\n    mergeMap(() =>\r\n      interval(1000).pipe(\r\n        takeUntil(shouldWait$),\r\n        takeUntil(stop$),\r\n        map(() => 1),\r\n      ),\r\n    ),\r\n  ),\r\n  reset$.pipe(map(() => 0)),\r\n  stop$.pipe(map(() => 0)),\r\n).pipe(scan((acc, val) => (val === 0 ? 0 : acc + val)));\r\n","export const formatTime = (seconds) => {\r\n  const displayedSeconds = seconds % 60;\r\n  const minutes = Math.floor((seconds / 60) % 60);\r\n  const hours = Math.floor(seconds / 3600);\r\n\r\n  return [hours, minutes, displayedSeconds].map((value) => (value > 9 ? value : `0${value}`)).join(' : ');\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { stopwatch$, actions$ } from './observables/stopwatch.observables';\r\nimport { formatTime } from './utils/time.utils';\r\nimport './App.css';\r\n\r\nexport const App = () => {\r\n  const [time, setTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const sub = stopwatch$.subscribe(setTime);\r\n\r\n    return () => sub.unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen\">\r\n      <div className=\"figure\">\r\n        <div className=\"watch\">{formatTime(time)}</div>\r\n        <div className=\"controls\">\r\n          <div className=\"btn\" role=\"button\" onClick={() => actions$.next('start')}>\r\n            Start\r\n          </div>\r\n          <div className=\"btn\" role=\"button\" onClick={() => actions$.next('stop')}>\r\n            Stop\r\n          </div>\r\n          <div className=\"btn\" role=\"button\" onClick={() => actions$.next('wait')}>\r\n            Wait\r\n          </div>\r\n          <div className=\"btn\" role=\"button\" onClick={() => actions$.next('reset')}>\r\n            Reset\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}